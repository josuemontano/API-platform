###
# app configuration
# https://docs.pylonsproject.org/projects/pyramid/en/latest/narr/environment.html
###

[app:main]
use = egg:canopus

pyramid.reload_templates = false
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.default_locale_name = en

###
# Webpack configuration
###

webpack.manifest = src/canopus/static/manifest.json
webpack.publicRoot = static
webpack.errorOnInvalidReference = false

###
# Rollbar configuration
###

rollbar.access_token = 
rollbar.environment = production
rollbar.branch = master
rollbar.root = %(here)s

###
# SQLAlchemy configuration
###

sqlalchemy.url =
sqlalchemy.pool_recycle = 3600
sqlalchemy.pool_size = 50
sqlalchemy.max_overflow = 10
sqlalchemy.pool_timeout = 30

retry.attempts = 3

###
# Gunicorn server configuration
###

[server:main]
use = egg:gunicorn#main
proc_name = canopus
workers = 3
preload = true
reload = true
accesslog = -

###
# logging configuration
# https://docs.pylonsproject.org/projects/pyramid/en/latest/narr/logging.html
###

[loggers]
keys = root, canopus, sqlalchemy

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console

[logger_canopus]
level = WARN
handlers =
qualname = canopus

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s:%(lineno)s][%(threadName)s] %(message)s
