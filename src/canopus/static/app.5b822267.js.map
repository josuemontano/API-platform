{"version":3,"sources":["webpack:///./utils/auth.js","webpack:///./index.js","webpack:///./views/App.js","webpack:///./views/LoginForm.js","webpack:///./views/Welcome.js"],"names":["getUserCredentials","isAuthenticated","crendentials","undefined","onLogin","logout","Cookies","remove","_preactRouter","route","authenticate","params","arguments","length","axios","post","network","access_token","then","response","data","catch","error","alert","console","__webpack_require__","getJSON","_ref","user","accessToken","expires","set","Date","storeUserCredentials","_preact","root","App","default","render","h","document","body","init","_auth","Router","onChange","onRouteChanged","_Welcome2","path","_LoginForm2","googleClientID","window","windowsClientID","event","url","Component","LoginForm","props","_classCallCheck3","this","_this","_possibleConstructorReturn3","__proto__","_getPrototypeOf2","call","hello","google","windows","display","page_uri","location","href","redirect_uri","loginUserOnRedirect","_hellojs2","login","scope","force","authResponse","getAuthResponse","uk-margin","type","onClick","onGoogleLogin","class","onWindowsLogin","uk-grid"],"mappings":"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","file":"app.5b822267.js","sourcesContent":["import * as Cookies from 'js-cookie';\nimport axios from 'axios';\nimport { route } from 'preact-router';\n\nfunction storeUserCredentials({ user, accessToken, expires }) {\n  Cookies.set('crendentials', { user, accessToken }, { expires: new Date(expires) });\n}\n\nexport function getUserCredentials() {\n  return Cookies.getJSON('crendentials');\n}\n\nexport function isAuthenticated() {\n  const crendentials = getUserCredentials();\n  return !(crendentials === null || crendentials === undefined);\n}\n\nexport function onLogin(response) {\n  storeUserCredentials(response);\n  route('/', true);\n}\n\nexport function logout() {\n  Cookies.remove('crendentials');\n  route('/login', true);\n}\n\nexport function authenticate(params = {}) {\n  axios\n    .post(`/auth/${params.network}`, { access_token: params.access_token })\n    .then(response => response.data)\n    .then(onLogin)\n    .catch((error) => {\n      alert('User could not login');\n      console.error(error);\n    });\n}\n","import 'babel-polyfill';\nimport 'uikit';\nimport { h, render } from 'preact';\n\nimport 'uikit/dist/css/uikit.min.css';\nimport '../css/theme.scss';\n\n\nlet root;\n\nfunction init() {\n  let App = require('./views/App').default;\n  root = render(<App />, document.body, root);\n}\n\ninit();\n\n// Re-render on Webpack HMR update:\nif (module.hot) module.hot.accept('./views/App', init);\n","import { Router, route } from 'preact-router';\nimport { isAuthenticated } from '~/utils/auth';\nimport { h, Component } from 'preact';\n\nimport LoginForm from './LoginForm';\nimport Welcome from './Welcome';\n\nexport default class App extends Component {\n  static onRouteChanged(event) {\n    const { url } = event;\n    if (url !== '/login' && !isAuthenticated()) {\n      route('/login', true);\n    }\n  }\n\n  render() {\n    return (\n      <Router onChange={App.onRouteChanged}>\n        <Welcome path=\"/\" />\n        <LoginForm path=\"/login\" googleClientID={window.googleClientID} windowsClientID={window.windowsClientID} />\n      </Router>\n    );\n  }\n}\n","import hello from 'hellojs';\nimport { authenticate } from '~/utils/auth';\nimport { h, Component } from 'preact';\n\nexport default class LoginForm extends Component {\n  static onGoogleLogin() {\n    const provider = hello('google');\n    provider.login({ scope: 'openid, email', force: true });\n  }\n\n  static onWindowsLogin() {\n    const provider = hello('windows');\n    provider.login({ scope: 'email', force: true });\n  }\n\n  static loginUserOnRedirect() {\n    // Login user on redirection\n    let authResponse = hello('google').getAuthResponse();\n    if (!authResponse) authResponse = hello('windows').getAuthResponse();\n\n    if (authResponse) authenticate(authResponse);\n  }\n\n  constructor(props) {\n    super(props);\n\n    hello.init(\n      {\n        google: props.googleClientID,\n        windows: props.windowsClientID,\n      },\n      {\n        display: 'page',\n        page_uri: window.location.href,\n        redirect_uri: '/login',\n      },\n    );\n\n    LoginForm.loginUserOnRedirect();\n  }\n\n  render() {\n    return (\n      <p uk-margin>\n        <button type=\"button\" onClick={LoginForm.onGoogleLogin} class=\"uk-button uk-button-primary\">\n          Entrar con Google\n        </button>\n        <button type=\"button\" onClick={LoginForm.onWindowsLogin} class=\"uk-button uk-button-secondary\">\n          Entrar con Microsoft\n        </button>\n      </p>\n    );\n  }\n}\n","import { h } from 'preact';\n\nconst Welcome = () => (\n  <div class=\"starter-template\">\n    <div class=\"container\">\n      <div uk-grid>\n        <div class=\"uk-width-1-4\" />\n        <div class=\"uk-width-1-2\">\n          <div class=\"content\">\n            <h1>\n              <span class=\"font-semi-bold\">Pyramid</span> <span class=\"smaller\">Alchemy project</span>\n            </h1>\n            <p class=\"lead\">\n              Welcome to <span class=\"font-normal\">canopus</span>, a&nbsp;Pyramid application generated&nbsp;by<br />\n              <span class=\"font-normal\">Cookiecutter</span>.\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nexport default Welcome;\n"],"sourceRoot":""}